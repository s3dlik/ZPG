#version 400
layout (location = 0) in vec4 position;
layout(location = 1) in vec3 normal;
layout (location = 2) in vec2 aTex;
//layout (location = 3) in vec4 aColor;
out vec4 colour;
out vec2 uv;

uniform mat4 cameraMatrix;
uniform mat4 modelMatrix;
out vec4 ex_worldPosition;
out vec4 ex_worldNormal;

void main (void) {
		gl_Position = cameraMatrix * modelMatrix * position;
		ex_worldPosition = modelMatrix * position;
		ex_worldNormal = transpose(inverse(modelMatrix)) * vec4(normal, 1.0);
		//colour = aColor;
		uv = aTex;
}